name: release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-[a-zA-Z]+'

jobs:
  ci:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        jdk: [ 19 ]
        node: [16.19.0]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.jdk }}

      - name: Cache gradle
        uses: actions/cache@v2.1.4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache node_modules
        uses: actions/cache@v2.1.4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Get github tag name
        id: get_tag_name
        run: echo ::set-output name=TAG_NAME::${GITHUB_REF#refs/tags/}

      - name: Rewrite version
        run: .github/workflows/scripts/release/rewrite_version.sh ${TAG_NAME}
        env:
          TAG_NAME: ${{ steps.get_tag_name.outputs.TAG_NAME }}

      - name: Build binary
        run: ./gradlew clean build

      - name: Get binary names
        id: get_binary_names
        run: |
          echo ::set-output name=WEB_APP_JAR_PATH::$(ls ./youkai-server/build/libs/*.jar | grep -v 'plain')
          echo ::set-output name=WEB_APP_JAR_NAME::$(basename $(ls ./youkai-server/build/libs/*.jar | grep -v 'plain'))
          echo ::set-output name=CONSOLE_JAR_PATH::$(ls ./youkai-console/build/libs/*.jar)
          echo ::set-output name=CONSOLE_JAR_NAME::$(basename $(ls ./youkai-console/build/libs/*.jar))

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag_name.outputs.TAG_NAME }}
          release_name: Release ${{ steps.get_tag_name.outputs.TAG_NAME }}
          body: ${{ github.event.pull_request.body }}
          draft: false
          prerelease: false

      - name: Upload Release Asset Web Application
        id: upload-release-asset-web
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_binary_names.outputs.WEB_APP_JAR_PATH }}
          asset_name: ${{ steps.get_binary_names.outputs.WEB_APP_JAR_NAME }}
          asset_content_type: application/zip

      - name: Upload Release Asset Console Application
        id: upload-release-asset-console
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_binary_names.outputs.CONSOLE_JAR_PATH }}
          asset_name: ${{ steps.get_binary_names.outputs.CONSOLE_JAR_NAME }}
          asset_content_type: application/zip

      # Build and Deploy frort only

      - name: Setup node env
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ./youkai-front/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./youkai-front/
        run: npm ci --prefer-offline --no-audit

      - name: Build for gh-pages dist
        working-directory: ./youkai-front/
        run: npm run generate

      - name: Deploy for gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./youkai-front/dist

      - name: Notify Discord
        uses: sarisia/actions-status-discord@v1
        with:
          webhook:
            ${{ secrets.DISCORD_WEBHOOK_URL }}
        if: always()
 